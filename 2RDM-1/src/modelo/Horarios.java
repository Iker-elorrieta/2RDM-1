package modelo;// Generated 14 ene 2025, 11:50:45 by Hibernate Tools 6.5.1.Final

import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import org.hibernate.Query;
import org.hibernate.Session;

/**
 * Horarios generated by hbm2java
 */
public class Horarios implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private HorariosId id;
	private Users users;
	private Modulos modulos;

	private List<Horarios> listaHorarios = new ArrayList<>();

	public Horarios() {
	}

	public Horarios(HorariosId id, Users users, Modulos modulos) {
		this.id = id;
		this.users = users;
		this.modulos = modulos;
	}

	public HorariosId getId() {
		return this.id;
	}

	public void setId(HorariosId id) {
		this.id = id;
	}

	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	public Modulos getModulos() {
		return this.modulos;
	}

	public void setModulos(Modulos modulos) {
		this.modulos = modulos;
	}

	public List<Horarios> getListaHorarios() {
		return this.listaHorarios;
	}

	public void setListaHorarios(List<Horarios> listaHorarios) {
		this.listaHorarios = listaHorarios;
	}

	public void limpiarHorarios() {
		this.listaHorarios.clear();
	}

	public void agregarHorario(Horarios horario) {
		this.listaHorarios.add(horario);
	}

	public List<Horarios> cargarHorariosPorUsuario(int userId, Session session) {
		String hql = "FROM Horarios h " + "LEFT JOIN FETCH h.users " + "LEFT JOIN FETCH h.modulos "
				+ "WHERE h.id.profeId ='" + userId + "'";		
		
		Query query = session.createQuery(hql);

		@SuppressWarnings("unchecked")
		List<Horarios> horarios = query.list();

		return horarios;
	}



	public List<Object[]> cargarHorariosAlumno(Session session) {
	    String hql = "SELECT h.id.dia, h.id.hora, h.modulos.nombre "
	               + "FROM Horarios h "
	               + "WHERE h.modulos.ciclos.id = (SELECT m.ciclos.id FROM Matriculaciones m WHERE m.users.id = 3) "
	               + "AND h.modulos.curso = (SELECT mat.id.curso FROM Matriculaciones mat WHERE mat.users.id = 3) "
	               + "ORDER BY h.id.dia, h.id.hora";

	    Query q = session.createQuery(hql);
	    List<Object[]> horarios = q.list();

	    // Para eliminar duplicados manteniendo el orden
	    
	    Set<String> uniqueSet = new LinkedHashSet<>();
	    
	    List<Object[]> horariosUnicos = new ArrayList<>();

	    for (Object[] fila : horarios) {
	        String comparar = fila[0] + "" + fila[1] + "" + fila[2];
	        if (!uniqueSet.contains(comparar)) {
	            uniqueSet.add(comparar);
	            
	            horariosUnicos.add(new Object[]{fila[0], fila[1], fila[2]}); // Guardar en la lista sin duplicados
	        }
	    }

	    return horariosUnicos;
	}



}